Starting parse
Entering state 0
Reading a token: Next token is token PROGRAM ()
Shifting token PROGRAM ()
Entering state 1
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 3
Reducing stack by rule 2 (line 23):
   $1 = token ID ()
-> $$ = nterm id_tmp ()
Stack now 0 1
Entering state 4
Reading a token: Next token is token SEMI ()
Shifting token SEMI ()
Entering state 6
Reading a token: Next token is token VAR ()
Reducing stack by rule 5 (line 36):
-> $$ = nterm const_part ()
Stack now 0 1 4 6
Entering state 9
Next token is token VAR ()
Reducing stack by rule 16 (line 98):
-> $$ = nterm type_part ()
Stack now 0 1 4 6 9
Entering state 14
Next token is token VAR ()
Shifting token VAR ()
Entering state 19
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 32
Reducing stack by rule 27 (line 182):
   $1 = token ID ()
-> $$ = nterm name_list ()
Stack now 0 1 4 6 9 14 19
Entering state 33
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 58
Reading a token: Next token is token SINTEGER ()
Shifting token SINTEGER ()
Entering state 47
Reducing stack by rule 30 (line 196):
   $1 = token SINTEGER ()
-> $$ = nterm simple_type_decl ()
Stack now 0 1 4 6 9 14 19 33 58
Entering state 56
Reducing stack by rule 19 (line 123):
   $1 = nterm simple_type_decl ()
-> $$ = nterm type_decl ()
Stack now 0 1 4 6 9 14 19 33 58
Entering state 76
Reading a token: Next token is token SEMI ()
Shifting token SEMI ()
Entering state 92
Reducing stack by rule 41 (line 261):
   $1 = nterm name_list ()
   $2 = token COLON ()
   $3 = nterm type_decl ()
   $4 = token SEMI ()
-> $$ = nterm var_decl_list ()
Stack now 0 1 4 6 9 14 19
Entering state 34
Reading a token: Next token is token FUNCTION ()
Reducing stack by rule 38 (line 242):
   $1 = token VAR ()
   $2 = nterm var_decl_list ()
-> $$ = nterm var_part ()
Stack now 0 1 4 6 9 14
Entering state 20
Next token is token FUNCTION ()
Shifting token FUNCTION ()
Entering state 35
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 3
Reducing stack by rule 2 (line 23):
   $1 = token ID ()
-> $$ = nterm id_tmp ()
Stack now 0 1 4 6 9 14 20 35
Entering state 61
Reading a token: Next token is token LP ()
Shifting token LP ()
Entering state 79
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 32
Reducing stack by rule 27 (line 182):
   $1 = token ID ()
-> $$ = nterm name_list ()
Stack now 0 1 4 6 9 14 20 35 61 79
Entering state 95
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 129
Reading a token: Next token is token SINTEGER ()
Shifting token SINTEGER ()
Entering state 47
Reducing stack by rule 30 (line 196):
   $1 = token SINTEGER ()
-> $$ = nterm simple_type_decl ()
Stack now 0 1 4 6 9 14 20 35 61 79 95 129
Entering state 160
Reducing stack by rule 53 (line 328):
   $1 = nterm name_list ()
   $2 = token COLON ()
   $3 = nterm simple_type_decl ()
-> $$ = nterm para_type_list ()
Stack now 0 1 4 6 9 14 20 35 61 79
Entering state 97
Reducing stack by rule 51 (line 320):
   $1 = nterm para_type_list ()
-> $$ = nterm para_decl_list ()
Stack now 0 1 4 6 9 14 20 35 61 79
Entering state 96
Reading a token: Next token is token RP ()
Shifting token RP ()
Entering state 131
Reducing stack by rule 48 (line 304):
   $1 = token LP ()
   $2 = nterm para_decl_list ()
   $3 = token RP ()
-> $$ = nterm parameters ()
Stack now 0 1 4 6 9 14 20 35 61
Entering state 80
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 98
Reading a token: Next token is token SINTEGER ()
Shifting token SINTEGER ()
Entering state 47
Reducing stack by rule 30 (line 196):
   $1 = token SINTEGER ()
-> $$ = nterm simple_type_decl ()
Stack now 0 1 4 6 9 14 20 35 61 80 98
Entering state 132
Reading a token: Next token is token SEMI ()
Shifting token SEMI ()
Entering state 162
Reading a token: Next token is token SBEGIN ()
Reducing stack by rule 5 (line 36):
-> $$ = nterm const_part ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162
Entering state 9
Next token is token SBEGIN ()
Reducing stack by rule 16 (line 98):
-> $$ = nterm type_part ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9
Entering state 14
Next token is token SBEGIN ()
Reducing stack by rule 39 (line 243):
-> $$ = nterm var_part ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14
Entering state 20
Next token is token SBEGIN ()
Reducing stack by rule 43 (line 269):
-> $$ = nterm routine_part ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20
Entering state 37
Next token is token SBEGIN ()
Shifting token SBEGIN ()
Entering state 63
Reducing stack by rule 55 (line 348):
-> $$ = nterm stmt_list ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63
Entering state 82
Reading a token: Next token is token IF ()
Shifting token IF ()
Entering state 103
Reading a token: Next token is token LP ()
Shifting token LP ()
Entering state 135
Reading a token: Next token is token LP ()
Shifting token LP ()
Entering state 135
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 134
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 105 (line 610):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 135
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 135
Entering state 142
Next token is token EQUAL ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 135
Entering state 141
Next token is token EQUAL ()
Reducing stack by rule 95 (line 553):
   $1 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 135
Entering state 164
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 170
Reading a token: Next token is token INTEGER ()
Shifting token INTEGER ()
Entering state 21
Reducing stack by rule 8 (line 61):
   $1 = token INTEGER ()
-> $$ = nterm const_value ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 135 164 170
Entering state 139
Reducing stack by rule 107 (line 621):
   $1 = nterm const_value ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 135 164 170
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 135 164 170
Entering state 142
Reading a token: Next token is token RP ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 135 164 170
Entering state 202
Next token is token RP ()
Reducing stack by rule 93 (line 541):
   $1 = nterm expression ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 135
Entering state 164
Next token is token RP ()
Shifting token RP ()
Entering state 198
Reducing stack by rule 108 (line 626):
   $1 = token LP ()
   $2 = nterm expression ()
   $3 = token RP ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135
Entering state 142
Reading a token: Next token is token OR ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135
Entering state 141
Next token is token OR ()
Shifting token OR ()
Entering state 179
Reading a token: Next token is token LP ()
Shifting token LP ()
Entering state 135
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 134
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 105 (line 610):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 141 179 135
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 141 179 135
Entering state 142
Next token is token EQUAL ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 141 179 135
Entering state 141
Next token is token EQUAL ()
Reducing stack by rule 95 (line 553):
   $1 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 141 179 135
Entering state 164
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 170
Reading a token: Next token is token INTEGER ()
Shifting token INTEGER ()
Entering state 21
Reducing stack by rule 8 (line 61):
   $1 = token INTEGER ()
-> $$ = nterm const_value ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 141 179 135 164 170
Entering state 139
Reducing stack by rule 107 (line 621):
   $1 = nterm const_value ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 141 179 135 164 170
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 141 179 135 164 170
Entering state 142
Reading a token: Next token is token RP ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 141 179 135 164 170
Entering state 202
Next token is token RP ()
Reducing stack by rule 93 (line 541):
   $1 = nterm expression ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 141 179 135
Entering state 164
Next token is token RP ()
Shifting token RP ()
Entering state 198
Reducing stack by rule 108 (line 626):
   $1 = token LP ()
   $2 = nterm expression ()
   $3 = token RP ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 141 179
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135 141 179
Entering state 211
Reading a token: Next token is token RP ()
Reducing stack by rule 98 (line 570):
   $1 = nterm expr ()
   $2 = token OR ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135
Entering state 141
Next token is token RP ()
Reducing stack by rule 95 (line 553):
   $1 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 135
Entering state 164
Next token is token RP ()
Shifting token RP ()
Entering state 198
Reducing stack by rule 108 (line 626):
   $1 = token LP ()
   $2 = nterm expression ()
   $3 = token RP ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103
Entering state 142
Reading a token: Next token is token THEN ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103
Entering state 141
Next token is token THEN ()
Reducing stack by rule 95 (line 553):
   $1 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103
Entering state 140
Next token is token THEN ()
Shifting token THEN ()
Entering state 171
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 100
Reading a token: Next token is token ASSIGN ()
Reducing stack by rule 2 (line 23):
   $1 = token ID ()
-> $$ = nterm id_tmp ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171
Entering state 109
Next token is token ASSIGN ()
Shifting token ASSIGN ()
Entering state 152
Reading a token: Next token is token INTEGER ()
Shifting token INTEGER ()
Entering state 21
Reducing stack by rule 8 (line 61):
   $1 = token INTEGER ()
-> $$ = nterm const_value ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 109 152
Entering state 139
Reducing stack by rule 107 (line 621):
   $1 = nterm const_value ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 109 152
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 109 152
Entering state 142
Reading a token: Next token is token ELSE ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 109 152
Entering state 141
Next token is token ELSE ()
Reducing stack by rule 95 (line 553):
   $1 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 109 152
Entering state 192
Next token is token ELSE ()
Reducing stack by rule 68 (line 369):
   $1 = nterm id_tmp ()
   $2 = token ASSIGN ()
   $3 = nterm expression ()
-> $$ = nterm assign_stmt ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171
Entering state 113
Reducing stack by rule 59 (line 359):
   $1 = nterm assign_stmt ()
-> $$ = nterm non_label_stmt ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171
Entering state 112
Reducing stack by rule 57 (line 355):
   $1 = nterm non_label_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171
Entering state 203
Next token is token ELSE ()
Shifting token ELSE ()
Entering state 230
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 100
Reading a token: Next token is token ASSIGN ()
Reducing stack by rule 2 (line 23):
   $1 = token ID ()
-> $$ = nterm id_tmp ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230
Entering state 109
Next token is token ASSIGN ()
Shifting token ASSIGN ()
Entering state 152
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 134
Reading a token: Next token is token LP ()
Reducing stack by rule 2 (line 23):
   $1 = token ID ()
-> $$ = nterm id_tmp ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152
Entering state 138
Next token is token LP ()
Shifting token LP ()
Entering state 169
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 134
Reading a token: Next token is token MINUS ()
Reducing stack by rule 105 (line 610):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 138 169
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 138 169
Entering state 142
Next token is token MINUS ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 138 169
Entering state 141
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 177
Reading a token: Next token is token INTEGER ()
Shifting token INTEGER ()
Entering state 21
Reducing stack by rule 8 (line 61):
   $1 = token INTEGER ()
-> $$ = nterm const_value ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 138 169 141 177
Entering state 139
Reducing stack by rule 107 (line 621):
   $1 = nterm const_value ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 138 169 141 177
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 138 169 141 177
Entering state 209
Reading a token: Next token is token RP ()
Reducing stack by rule 97 (line 564):
   $1 = nterm expr ()
   $2 = token MINUS ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 138 169
Entering state 141
Next token is token RP ()
Reducing stack by rule 95 (line 553):
   $1 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 138 169
Entering state 191
Next token is token RP ()
Reducing stack by rule 88 (line 511):
   $1 = nterm expression ()
-> $$ = nterm expression_list ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 138 169
Entering state 201
Next token is token RP ()
Shifting token RP ()
Entering state 229
Reducing stack by rule 106 (line 615):
   $1 = nterm id_tmp ()
   $2 = token LP ()
   $3 = nterm expression_list ()
   $4 = token RP ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152
Entering state 142
Reading a token: Next token is token PLUS ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152
Entering state 141
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 178
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 134
Reading a token: Next token is token LP ()
Reducing stack by rule 2 (line 23):
   $1 = token ID ()
-> $$ = nterm id_tmp ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178
Entering state 138
Next token is token LP ()
Shifting token LP ()
Entering state 169
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 134
Reading a token: Next token is token MINUS ()
Reducing stack by rule 105 (line 610):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178 138 169
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178 138 169
Entering state 142
Next token is token MINUS ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178 138 169
Entering state 141
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 177
Reading a token: Next token is token INTEGER ()
Shifting token INTEGER ()
Entering state 21
Reducing stack by rule 8 (line 61):
   $1 = token INTEGER ()
-> $$ = nterm const_value ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178 138 169 141 177
Entering state 139
Reducing stack by rule 107 (line 621):
   $1 = nterm const_value ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178 138 169 141 177
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178 138 169 141 177
Entering state 209
Reading a token: Next token is token RP ()
Reducing stack by rule 97 (line 564):
   $1 = nterm expr ()
   $2 = token MINUS ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178 138 169
Entering state 141
Next token is token RP ()
Reducing stack by rule 95 (line 553):
   $1 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178 138 169
Entering state 191
Next token is token RP ()
Reducing stack by rule 88 (line 511):
   $1 = nterm expression ()
-> $$ = nterm expression_list ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178 138 169
Entering state 201
Next token is token RP ()
Shifting token RP ()
Entering state 229
Reducing stack by rule 106 (line 615):
   $1 = nterm id_tmp ()
   $2 = token LP ()
   $3 = nterm expression_list ()
   $4 = token RP ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152 141 178
Entering state 210
Reading a token: Next token is token SEMI ()
Reducing stack by rule 96 (line 558):
   $1 = nterm expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152
Entering state 141
Next token is token SEMI ()
Reducing stack by rule 95 (line 553):
   $1 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230 109 152
Entering state 192
Next token is token SEMI ()
Reducing stack by rule 68 (line 369):
   $1 = nterm id_tmp ()
   $2 = token ASSIGN ()
   $3 = nterm expression ()
-> $$ = nterm assign_stmt ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230
Entering state 113
Reducing stack by rule 59 (line 359):
   $1 = nterm assign_stmt ()
-> $$ = nterm non_label_stmt ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230
Entering state 112
Reducing stack by rule 57 (line 355):
   $1 = nterm non_label_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82 103 140 171 203 230
Entering state 241
Reducing stack by rule 74 (line 408):
   $1 = token IF ()
   $2 = nterm expression ()
   $3 = token THEN ()
   $4 = nterm stmt ()
   $5 = token ELSE ()
   $6 = nterm stmt ()
-> $$ = nterm if_stmt ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82
Entering state 116
Reducing stack by rule 62 (line 362):
   $1 = nterm if_stmt ()
-> $$ = nterm non_label_stmt ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82
Entering state 112
Reducing stack by rule 57 (line 355):
   $1 = nterm non_label_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63 82
Entering state 110
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 153
Reducing stack by rule 54 (line 335):
   $1 = nterm stmt_list ()
   $2 = nterm stmt ()
   $3 = token SEMI ()
-> $$ = nterm stmt_list ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37 63
Entering state 82
Reading a token: Next token is token END ()
Shifting token END ()
Entering state 102
Reducing stack by rule 73 (line 402):
   $1 = token SBEGIN ()
   $2 = nterm stmt_list ()
   $3 = token END ()
-> $$ = nterm compound_stmt ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162 9 14 20 37
Entering state 65
Reducing stack by rule 3 (line 25):
   $1 = nterm const_part ()
   $2 = nterm type_part ()
   $3 = nterm var_part ()
   $4 = nterm routine_part ()
   $5 = nterm compound_stmt ()
-> $$ = nterm routine ()
Stack now 0 1 4 6 9 14 20 35 61 80 98 132 162
Entering state 197
Reading a token: Next token is token SEMI ()
Shifting token SEMI ()
Entering state 227
Reducing stack by rule 46 (line 286):
   $1 = token FUNCTION ()
   $2 = nterm id_tmp ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm simple_type_decl ()
   $6 = token SEMI ()
   $7 = nterm routine ()
   $8 = token SEMI ()
-> $$ = nterm func_proc_decl ()
Stack now 0 1 4 6 9 14 20
Entering state 39
Reducing stack by rule 45 (line 284):
   $1 = nterm func_proc_decl ()
-> $$ = nterm routine_part_list ()
Stack now 0 1 4 6 9 14 20
Entering state 38
Reducing stack by rule 42 (line 268):
   $1 = nterm routine_part_list ()
-> $$ = nterm routine_part ()
Stack now 0 1 4 6 9 14 20
Entering state 37
Reading a token: Next token is token SBEGIN ()
Shifting token SBEGIN ()
Entering state 63
Reducing stack by rule 55 (line 348):
-> $$ = nterm stmt_list ()
Stack now 0 1 4 6 9 14 20 37 63
Entering state 82
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 100
Reading a token: Next token is token ASSIGN ()
Reducing stack by rule 2 (line 23):
   $1 = token ID ()
-> $$ = nterm id_tmp ()
Stack now 0 1 4 6 9 14 20 37 63 82
Entering state 109
Next token is token ASSIGN ()
Shifting token ASSIGN ()
Entering state 152
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 134
Reading a token: Next token is token SEMI ()
Reducing stack by rule 105 (line 610):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 152
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 152
Entering state 142
Next token is token SEMI ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 152
Entering state 141
Next token is token SEMI ()
Reducing stack by rule 95 (line 553):
   $1 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 152
Entering state 192
Next token is token SEMI ()
Reducing stack by rule 68 (line 369):
   $1 = nterm id_tmp ()
   $2 = token ASSIGN ()
   $3 = nterm expression ()
-> $$ = nterm assign_stmt ()
Stack now 0 1 4 6 9 14 20 37 63 82
Entering state 113
Reducing stack by rule 59 (line 359):
   $1 = nterm assign_stmt ()
-> $$ = nterm non_label_stmt ()
Stack now 0 1 4 6 9 14 20 37 63 82
Entering state 112
Reducing stack by rule 57 (line 355):
   $1 = nterm non_label_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 4 6 9 14 20 37 63 82
Entering state 110
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 153
Reducing stack by rule 54 (line 335):
   $1 = nterm stmt_list ()
   $2 = nterm stmt ()
   $3 = token SEMI ()
-> $$ = nterm stmt_list ()
Stack now 0 1 4 6 9 14 20 37 63
Entering state 82
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 100
Reading a token: Next token is token LP ()
Reducing stack by rule 2 (line 23):
   $1 = token ID ()
-> $$ = nterm id_tmp ()
Stack now 0 1 4 6 9 14 20 37 63 82
Entering state 109
Next token is token LP ()
Shifting token LP ()
Entering state 151
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 134
Reading a token: Next token is token LP ()
Reducing stack by rule 2 (line 23):
   $1 = token ID ()
-> $$ = nterm id_tmp ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 151
Entering state 138
Next token is token LP ()
Shifting token LP ()
Entering state 169
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 134
Reading a token: Next token is token RP ()
Reducing stack by rule 105 (line 610):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 151 138 169
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 151 138 169
Entering state 142
Next token is token RP ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 151 138 169
Entering state 141
Next token is token RP ()
Reducing stack by rule 95 (line 553):
   $1 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 151 138 169
Entering state 191
Next token is token RP ()
Reducing stack by rule 88 (line 511):
   $1 = nterm expression ()
-> $$ = nterm expression_list ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 151 138 169
Entering state 201
Next token is token RP ()
Shifting token RP ()
Entering state 229
Reducing stack by rule 106 (line 615):
   $1 = nterm id_tmp ()
   $2 = token LP ()
   $3 = nterm expression_list ()
   $4 = token RP ()
-> $$ = nterm factor ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 151
Entering state 143
Reducing stack by rule 104 (line 605):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 151
Entering state 142
Reading a token: Next token is token RP ()
Reducing stack by rule 99 (line 576):
   $1 = nterm term ()
-> $$ = nterm expr ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 151
Entering state 141
Next token is token RP ()
Reducing stack by rule 95 (line 553):
   $1 = nterm expr ()
-> $$ = nterm expression ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 151
Entering state 191
Next token is token RP ()
Reducing stack by rule 88 (line 511):
   $1 = nterm expression ()
-> $$ = nterm expression_list ()
Stack now 0 1 4 6 9 14 20 37 63 82 109 151
Entering state 190
Next token is token RP ()
Shifting token RP ()
Entering state 226
Reducing stack by rule 72 (line 395):
   $1 = nterm id_tmp ()
   $2 = token LP ()
   $3 = nterm expression_list ()
   $4 = token RP ()
-> $$ = nterm proc_stmt ()
Stack now 0 1 4 6 9 14 20 37 63 82
Entering state 114
Reducing stack by rule 60 (line 360):
   $1 = nterm proc_stmt ()
-> $$ = nterm non_label_stmt ()
Stack now 0 1 4 6 9 14 20 37 63 82
Entering state 112
Reducing stack by rule 57 (line 355):
   $1 = nterm non_label_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 4 6 9 14 20 37 63 82
Entering state 110
Reading a token: Next token is token SEMI ()
Shifting token SEMI ()
Entering state 153
Reducing stack by rule 54 (line 335):
   $1 = nterm stmt_list ()
   $2 = nterm stmt ()
   $3 = token SEMI ()
-> $$ = nterm stmt_list ()
Stack now 0 1 4 6 9 14 20 37 63
Entering state 82
Reading a token: Next token is token END ()
Shifting token END ()
Entering state 102
Reducing stack by rule 73 (line 402):
   $1 = token SBEGIN ()
   $2 = nterm stmt_list ()
   $3 = token END ()
-> $$ = nterm compound_stmt ()
Stack now 0 1 4 6 9 14 20 37
Entering state 65
Reducing stack by rule 3 (line 25):
   $1 = nterm const_part ()
   $2 = nterm type_part ()
   $3 = nterm var_part ()
   $4 = nterm routine_part ()
   $5 = nterm compound_stmt ()
-> $$ = nterm routine ()
Stack now 0 1 4 6
Entering state 8
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 12
Reducing stack by rule 1 (line 17):
   $1 = token PROGRAM ()
   $2 = nterm id_tmp ()
   $3 = token SEMI ()
   $4 = nterm routine ()
   $5 = token DOT ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 5
Stack now 0 2 5
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
